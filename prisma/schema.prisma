generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  role          Role      @default(COLLABORATOR)
  kanbans       Kanban[]  @relation("UserKanbans")
  ownedKanbans  Kanban[]  @relation("KanbanOwner")
  assignedCards Card[]    @relation("CardAssignees")
  createdAt     DateTime  @default(now())
  comments      Comment[]
  avatarUrl     String?
}

model Kanban {
  id          String       @id @default(cuid())
  name        String
  description String?
  owner       User         @relation("KanbanOwner", fields: [ownerId], references: [id])
  ownerId     String
  members     User[]       @relation("UserKanbans")
  columns     Column[]
  invitations Invitation[]
  createdAt   DateTime     @default(now())
}

model Column {
  id       String   @id @default(cuid())
  title    String
  order    Int
  kanban   Kanban   @relation(fields: [kanbanId], references: [id])
  kanbanId String
  cards    Card[]
}

model Card {
  id          String      @id @default(cuid())
  title       String
  description String?
  order       Int

  column   Column    @relation(fields: [columnId], references: [id])
  columnId String

  assignees   User[]          @relation("CardAssignees")
  labels      Label[]         @relation("CardLabels")
  checklist   ChecklistItem[]
  comments    Comment[]
  attachments Attachment[]

  createdAt DateTime @default(now())
}

model Label {
  id    String  @id @default(cuid())
  name  String
  color String
  cards Card[]  @relation("CardLabels")
}

model ChecklistItem {
  id     String  @id @default(cuid())
  text   String
  done   Boolean @default(false)
  card   Card    @relation(fields: [cardId], references: [id])
  cardId String
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  card      Card     @relation(fields: [cardId], references: [id])
  cardId    String
  createdAt DateTime @default(now())
}

model Attachment {
  id       String  @id @default(cuid())
  filename String
  url      String
  card     Card    @relation(fields: [cardId], references: [id])
  cardId   String
}

model Invitation {
  id         String   @id @default(cuid())
  email      String
  token      String   @unique
  kanban     Kanban   @relation(fields: [kanbanId], references: [id])
  kanbanId   String
  role       Role     @default(COLLABORATOR)
  createdAt  DateTime @default(now())
  used       Boolean  @default(false)
  usedAt     DateTime?
}

enum Role {
  ADMIN
  COLLABORATOR
}
